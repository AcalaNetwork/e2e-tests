// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`'acala' homa > with latest block > Homa redeem unbond works > events 1`] = `
[
  {
    "data": {
      "allowFastMatch": false,
      "liquidAmount": 1000000000000,
      "redeemer": "23y3WetbNi6rDMgHmyRDjgpb7PnhgPotuPPawxruTMLYTLzG",
    },
    "method": "RequestedRedeem",
    "section": "homa",
  },
]
`;

exports[`'acala' homa > with latest block > Homa redeem unbond works > events 2`] = `
[
  {
    "data": {
      "eraIndexWhenUnbond": 100,
      "liquidAmount": 1000000000000,
      "redeemer": "23y3WetbNi6rDMgHmyRDjgpb7PnhgPotuPPawxruTMLYTLzG",
      "unbondingStakingAmount": "(rounded 170000000000)",
    },
    "method": "RedeemedByUnbond",
    "section": "homa",
  },
]
`;

exports[`'acala' homa > with latest block > Homa redeem unbond works > system events 1`] = `
[
  {
    "data": {
      "amount": "(rounded 170000000000)",
      "stash": "(address)",
    },
    "method": "Unbonded",
    "section": "staking",
  },
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": 2000,
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": "(rounded 16000)",
        "refTime": "(rounded 1400000000)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
]
`;

exports[`'acala' homa > with latest block > Homa stake works > events 1`] = `
[
  {
    "data": {
      "liquidAmountAddedToVoid": "(number)",
      "liquidAmountReceived": "(number)",
      "minter": "23y3WetbNi6rDMgHmyRDjgpb7PnhgPotuPPawxruTMLYTLzG",
      "stakingCurrencyAmount": "(number)",
    },
    "method": "Minted",
    "section": "homa",
  },
]
`;

exports[`'acala' homa > with latest block > Homa stake works > events 2`] = `
[
  {
    "data": {
      "newEraIndex": 100,
    },
    "method": "CurrentEraBumped",
    "section": "homa",
  },
]
`;

exports[`'acala' homa > with latest block > Homa stake works > system events 1`] = `
[
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": "(number)",
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": "(number)",
        "refTime": "(number)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
  {
    "data": {
      "amount": "(number)",
      "stash": "(address)",
    },
    "method": "Bonded",
    "section": "staking",
  },
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": "(number)",
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": "(number)",
        "refTime": "(number)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
]
`;

exports[`'acala' homa > with latest block > Homa stake works > ump 1`] = `
[
  {
    "v4": [
      {
        "withdrawAsset": [
          {
            "fun": {
              "fungible": "(number)",
            },
            "id": {
              "interior": {
                "here": null,
              },
              "parents": "(number)",
            },
          },
        ],
      },
      {
        "clearOrigin": null,
      },
      {
        "buyExecution": {
          "fees": {
            "fun": {
              "fungible": "(number)",
            },
            "id": {
              "interior": {
                "here": null,
              },
              "parents": "(number)",
            },
          },
          "weightLimit": {
            "limited": {
              "proofSize": "(number)",
              "refTime": "(number)",
            },
          },
        },
      },
      {
        "depositAsset": {
          "assets": {
            "wild": {
              "allCounted": "(number)",
            },
          },
          "beneficiary": {
            "interior": {
              "x1": [
                {
                  "accountId32": {
                    "id": "(hex)",
                    "network": null,
                  },
                },
              ],
            },
            "parents": "(number)",
          },
        },
      },
    ],
  },
  {
    "v4": [
      {
        "withdrawAsset": [
          {
            "fun": {
              "fungible": "(number)",
            },
            "id": {
              "interior": {
                "here": null,
              },
              "parents": "(number)",
            },
          },
        ],
      },
      {
        "buyExecution": {
          "fees": {
            "fun": {
              "fungible": "(number)",
            },
            "id": {
              "interior": {
                "here": null,
              },
              "parents": "(number)",
            },
          },
          "weightLimit": {
            "unlimited": null,
          },
        },
      },
      {
        "transact": {
          "call": {
            "encoded": "(hex)",
          },
          "originKind": "SovereignAccount",
          "requireWeightAtMost": {
            "proofSize": "(number)",
            "refTime": "(number)",
          },
        },
      },
      {
        "refundSurplus": null,
      },
      {
        "depositAsset": {
          "assets": {
            "wild": {
              "allCounted": "(number)",
            },
          },
          "beneficiary": {
            "interior": {
              "x1": [
                {
                  "parachain": "(number)",
                },
              ],
            },
            "parents": "(number)",
          },
        },
      },
    ],
  },
]
`;

exports[`'acala' homa > with specific block > unbond withdraw works > events 1`] = `
[
  {
    "data": {
      "newEraIndex": "(rounded 1200)",
    },
    "method": "CurrentEraBumped",
    "section": "homa",
  },
]
`;

exports[`'acala' homa > with specific block > unbond withdraw works > system events 1`] = `
[
  {
    "data": {
      "amount": "(rounded 64000000000)",
      "stash": "15sr8Dvq3AT3Z2Z1y8FnQ4VipekAHhmQnrkgzegUr1tNgbcn",
    },
    "method": "Withdrawn",
    "section": "staking",
  },
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": 2000,
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": "(rounded 260000)",
        "refTime": "(rounded 25000000000)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
]
`;

exports[`'acala' homa > with specific block > unbond withdraw works > ump 1`] = `
[
  {
    "v3": [
      {
        "withdrawAsset": [
          {
            "fun": {
              "fungible": 10000000000,
            },
            "id": {
              "concrete": {
                "interior": {
                  "here": null,
                },
                "parents": 0,
              },
            },
          },
        ],
      },
      {
        "buyExecution": {
          "fees": {
            "fun": {
              "fungible": 10000000000,
            },
            "id": {
              "concrete": {
                "interior": {
                  "here": null,
                },
                "parents": 0,
              },
            },
          },
          "weightLimit": {
            "unlimited": null,
          },
        },
      },
      {
        "transact": {
          "call": {
            "encoded": "0x1a010000070305000000",
          },
          "originKind": "SovereignAccount",
          "requireWeightAtMost": {
            "proofSize": 131072,
            "refTime": 10000000000,
          },
        },
      },
      {
        "transact": {
          "call": {
            "encoded": "0x1a01000005030070617261d00700000000000000000000000000000000000000000000000000000bd76e3b5f030a",
          },
          "originKind": "SovereignAccount",
          "requireWeightAtMost": {
            "proofSize": 131072,
            "refTime": 10000000000,
          },
        },
      },
      {
        "refundSurplus": null,
      },
      {
        "depositAsset": {
          "assets": {
            "wild": {
              "allCounted": 1,
            },
          },
          "beneficiary": {
            "interior": {
              "x1": {
                "parachain": 2000,
              },
            },
            "parents": 0,
          },
        },
      },
    ],
  },
]
`;

exports[`'karura' homa > with latest block > Homa redeem unbond works > events 1`] = `
[
  {
    "data": {
      "allowFastMatch": false,
      "liquidAmount": 1000000000000,
      "redeemer": "rPizfonc8MPuEsMxufAytHjpRW7a2YrXWHKibaJXe9ZtjKx",
    },
    "method": "RequestedRedeem",
    "section": "homa",
  },
]
`;

exports[`'karura' homa > with latest block > Homa redeem unbond works > events 2`] = `
[
  {
    "data": {
      "eraIndexWhenUnbond": 100,
      "liquidAmount": 1000000000000,
      "redeemer": "rPizfonc8MPuEsMxufAytHjpRW7a2YrXWHKibaJXe9ZtjKx",
      "unbondingStakingAmount": "(rounded 180000000000)",
    },
    "method": "RedeemedByUnbond",
    "section": "homa",
  },
]
`;

exports[`'karura' homa > with latest block > Homa redeem unbond works > system events 1`] = `
[
  {
    "data": {
      "amount": "(rounded 180000000000)",
      "stash": "(address)",
    },
    "method": "Unbonded",
    "section": "staking",
  },
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": 2000,
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": "(rounded 16000)",
        "refTime": "(rounded 1600000000)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
]
`;

exports[`'karura' homa > with latest block > Homa stake works > events 1`] = `
[
  {
    "data": {
      "liquidAmountAddedToVoid": "(number)",
      "liquidAmountReceived": "(number)",
      "minter": "rPizfonc8MPuEsMxufAytHjpRW7a2YrXWHKibaJXe9ZtjKx",
      "stakingCurrencyAmount": "(number)",
    },
    "method": "Minted",
    "section": "homa",
  },
]
`;

exports[`'karura' homa > with latest block > Homa stake works > events 2`] = `
[
  {
    "data": {
      "newEraIndex": 100,
    },
    "method": "CurrentEraBumped",
    "section": "homa",
  },
]
`;

exports[`'karura' homa > with latest block > Homa stake works > system events 1`] = `
[
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": "(number)",
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": "(number)",
        "refTime": "(number)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
  {
    "data": {
      "amount": "(number)",
      "stash": "(address)",
    },
    "method": "Bonded",
    "section": "staking",
  },
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": "(number)",
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": "(number)",
        "refTime": "(number)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
]
`;

exports[`'karura' homa > with latest block > Homa stake works > ump 1`] = `
[
  {
    "v4": [
      {
        "withdrawAsset": [
          {
            "fun": {
              "fungible": "(number)",
            },
            "id": {
              "interior": {
                "here": null,
              },
              "parents": "(number)",
            },
          },
        ],
      },
      {
        "clearOrigin": null,
      },
      {
        "buyExecution": {
          "fees": {
            "fun": {
              "fungible": "(number)",
            },
            "id": {
              "interior": {
                "here": null,
              },
              "parents": "(number)",
            },
          },
          "weightLimit": {
            "limited": {
              "proofSize": "(number)",
              "refTime": "(number)",
            },
          },
        },
      },
      {
        "depositAsset": {
          "assets": {
            "wild": {
              "allCounted": "(number)",
            },
          },
          "beneficiary": {
            "interior": {
              "x1": [
                {
                  "accountId32": {
                    "id": "(hex)",
                    "network": null,
                  },
                },
              ],
            },
            "parents": "(number)",
          },
        },
      },
    ],
  },
  {
    "v4": [
      {
        "withdrawAsset": [
          {
            "fun": {
              "fungible": "(number)",
            },
            "id": {
              "interior": {
                "here": null,
              },
              "parents": "(number)",
            },
          },
        ],
      },
      {
        "buyExecution": {
          "fees": {
            "fun": {
              "fungible": "(number)",
            },
            "id": {
              "interior": {
                "here": null,
              },
              "parents": "(number)",
            },
          },
          "weightLimit": {
            "unlimited": null,
          },
        },
      },
      {
        "transact": {
          "call": {
            "encoded": "(hex)",
          },
          "originKind": "SovereignAccount",
          "requireWeightAtMost": {
            "proofSize": "(number)",
            "refTime": "(number)",
          },
        },
      },
      {
        "refundSurplus": null,
      },
      {
        "depositAsset": {
          "assets": {
            "wild": {
              "allCounted": "(number)",
            },
          },
          "beneficiary": {
            "interior": {
              "x1": [
                {
                  "parachain": "(number)",
                },
              ],
            },
            "parents": "(number)",
          },
        },
      },
    ],
  },
]
`;

exports[`'karura' homa > with specific block > unbond withdraw works > events 1`] = `
[
  {
    "data": {
      "newEraIndex": "(rounded 5500)",
    },
    "method": "CurrentEraBumped",
    "section": "homa",
  },
]
`;

exports[`'karura' homa > with specific block > unbond withdraw works > system events 1`] = `
[
  {
    "data": {
      "id": "(hash)",
      "origin": {
        "Ump": {
          "Para": 2000,
        },
      },
      "success": true,
      "weightUsed": {
        "proofSize": "(rounded 260000)",
        "refTime": "(rounded 39000000000)",
      },
    },
    "method": "Processed",
    "section": "messageQueue",
  },
]
`;

exports[`'karura' homa > with specific block > unbond withdraw works > ump 1`] = `
[
  {
    "v3": [
      {
        "withdrawAsset": [
          {
            "fun": {
              "fungible": 20000000000,
            },
            "id": {
              "concrete": {
                "interior": {
                  "here": null,
                },
                "parents": 0,
              },
            },
          },
        ],
      },
      {
        "buyExecution": {
          "fees": {
            "fun": {
              "fungible": 20000000000,
            },
            "id": {
              "concrete": {
                "interior": {
                  "here": null,
                },
                "parents": 0,
              },
            },
          },
          "weightLimit": {
            "unlimited": null,
          },
        },
      },
      {
        "transact": {
          "call": {
            "encoded": "0x18010200060305000000",
          },
          "originKind": "SovereignAccount",
          "requireWeightAtMost": {
            "proofSize": 131072,
            "refTime": 20000000000,
          },
        },
      },
      {
        "transact": {
          "call": {
            "encoded": "0x1801020004030070617261d00700000000000000000000000000000000000000000000000000000b07db23d49c4c",
          },
          "originKind": "SovereignAccount",
          "requireWeightAtMost": {
            "proofSize": 131072,
            "refTime": 20000000000,
          },
        },
      },
      {
        "refundSurplus": null,
      },
      {
        "depositAsset": {
          "assets": {
            "wild": {
              "allCounted": 1,
            },
          },
          "beneficiary": {
            "interior": {
              "x1": {
                "parachain": 2000,
              },
            },
            "parents": 0,
          },
        },
      },
    ],
  },
]
`;
